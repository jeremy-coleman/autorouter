"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var fs=require("fs"),path=require("path"),sinon_1=require("sinon"),chai_1=require("chai"),autorouter_1=require("./autorouter");describe("AutoRouter",function(){before(function(){try{fs.mkdirSync("routes"),fs.mkdirSync("routes/a"),fs.writeFileSync("routes/a.js","module.exports = function(req,res,next){}"),fs.writeFileSync("routes/b.js","module.exports = function(req,res,next){}"),fs.writeFileSync("routes/a/index.js","module.exports = function(req,res,next){}")}catch(e){console.log("Files or folders already exist")}}),it("Should get the correct files",function(){var e=autorouter_1.AutoRouter.getFiles("routes"),t=autorouter_1.AutoRouter.getFiles("routes/a");chai_1.expect(e).to.deep.equal(["a","a.js","b.js"]),chai_1.expect(t).to.deep.equal(["index.js"])}),it('Should throw an error on adding "a" twice',function(){var e=new autorouter_1.AutoRouter,t=e.getRoutingFilesRecursively.bind(e,"routes","/");chai_1.expect(t).to.throw(Error,/Route \/a already exists in route map/)}),it('Should not throw an error on adding "a" twice when forced',function(){var e=sinon_1.spy(),t=console.warn;console.warn=e;var o=new autorouter_1.AutoRouter({force:!0}),r=o.getRoutingFilesRecursively.bind(o,"routes","/");chai_1.expect(r).not.to.throw(Error),chai_1.expect(e.called).to.be.true,console.warn=t}),it("Should create a map of flat files",function(){var e=autorouter_1.AutoRouter.getFiles;autorouter_1.AutoRouter.getFiles=function(){return["a.js","b.js"]};var t=new autorouter_1.AutoRouter({}),o=t.getRoutingFilesRecursively(t.base,"/");chai_1.expect(o).to.have.property("/a",path.join(t.base,"a.js")),chai_1.expect(o).to.have.property("/b",path.join(t.base,"b.js")),autorouter_1.AutoRouter.getFiles=e}),it("Should create a map of mixed files",function(){var e=autorouter_1.AutoRouter.getFiles;autorouter_1.AutoRouter.getFiles=function(e){return e===path.join(process.cwd(),"routes")?["a","b.js"]:["index.js"]};var t=new autorouter_1.AutoRouter({}),o=t.getRoutingFilesRecursively(t.base,"/");chai_1.expect(o).to.have.property("/a",path.join(t.base,"a","index.js")),chai_1.expect(o).to.have.property("/b",path.join(t.base,"b.js")),autorouter_1.AutoRouter.getFiles=e}),it("Should create an Express Router of mixed files",function(){var e=autorouter_1.AutoRouter.getFiles;autorouter_1.AutoRouter.getFiles=function(e){return e===path.join(process.cwd(),"routes")?["a","b.js"]:["index.js"]};var t=new autorouter_1.AutoRouter({}),o=t.getRouter();chai_1.expect(o).to.have.property("stack").which.have.lengthOf(2),autorouter_1.AutoRouter.getFiles=e}),it("Should handle different base",function(){var e=new autorouter_1.AutoRouter({base:path.join("routes","a")}),t=e.getRoutingFilesRecursively(e.base,"/");chai_1.expect(t).to.have.property("/",path.join(e.base,"index.js"))}),it("Should handle absolute base",function(){var e=new autorouter_1.AutoRouter({base:path.join(process.cwd(),"routes","a")}),t=e.getRoutingFilesRecursively(e.base,"/");chai_1.expect(t).to.have.property("/",path.join(e.base,"index.js"))}),after(function(){fs.unlinkSync("routes/a.js"),fs.unlinkSync("routes/b.js"),fs.unlinkSync("routes/a/index.js"),fs.rmdirSync("routes/a"),fs.rmdirSync("routes")})});